#!/usr/bin/env python3

import argparse
import socket
# import subprocess
from pathlib import Path

parser = argparse.ArgumentParser()
parser.add_argument("--dry-run", help="print ln commands to stdout",
                    action="store_true")
args = parser.parse_args()

home_dir = Path('~').expanduser()
bkps_dir = home_dir / 'Dropbox' / 'backups'
shared_bkp_dir = bkps_dir / 'laptop'
hostname = socket.gethostname()
# res = subprocess.run('hostname', stdout=subprocess.PIPE)
# hostname = res.stdout.rstrip().decode('utf-8')
host_bkp_dir = bkps_dir / hostname
excl_suffixes = {'.desktop', '.vcf', '.xz', '.EXE', '.txt', '.csv'}
excl_names = {'signature', 'scripts', 'mc', 'mutt', 'Pictures', 'keyboard',
                'crypto'}
not_hidden_dirs = {'bin'}

def filter_files_from(bkp_path):
    return [path for path in bkp_path.glob('*') if '_' not in path.name and
                                                    path.name not in excl_names and
                                                    path.suffix not in excl_suffixes]

host_files = filter_files_from(host_bkp_dir)
host_filenames = {path.name for path in host_files}
shared_files = [path for path in filter_files_from(shared_bkp_dir) if path.name not in host_filenames]
host_files.extend(shared_files)

for path in host_files:
    if '-' in path.name:
        *parts, name = path.name.split('-')
        parts[0] = '.' + parts[0]
        target_dir = home_dir / Path(*parts)
        target = target_dir / name
    else:
        dest = ('.%s' % path.name if not path.is_dir() or path.name not in not_hidden_dirs else path.name)
        target = home_dir / dest

    if args.dry_run:
        print('ln -s %s %s' % (path, target))
    else:
        path.symlink_to(target)
